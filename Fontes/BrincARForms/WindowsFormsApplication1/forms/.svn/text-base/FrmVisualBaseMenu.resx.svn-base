<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACBGEkAgZPdQIGP4YCBT+HAQQ8gQABIE4AAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA2ECAQFfNQID
        RXkCAz2HAgQ9iAIDPIEAABQ+AAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJFWmZG0WJ/xtVnv8YUJz/FUGS/wgVYOEBAhxSAAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEB2E4CxVr1hQ3iv8YQZL/HUSQ/yAuev8EBj2mAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALF2lbF0KI7RFrv/8Mcs7/EXHI/xBAlP8GC0y6AQMRNgAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAkSaBIID2a1EEGX/w5uyf8Kb8z/E12x/xgpcfQDBjBoAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEWYNDx5sjBVFjvYMb8n+DHLN/w5s
        xf8IJHr2BgpCmQECDCcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACxhqCQkQZIgIKIL5DWvF/wxyzf8OZ8D/Fi97+QoOQ5kBAxMOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBlrFhIi
        a6YYVJ39FHnO/xR70f8IWbb/Bhpu7wYNOYYAAgYXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARIW4GDBdobgUZc+0LZMD/FHzR/xR3zf8XO4j6DhNMqwIH
        ICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA8ebCkVMXjVGWSw/xuB0v8We87/CEGc/wkXYuMHDSpgBQgdKQUJHicFCR4nBQkeJwUJ
        HicFCR4nBQkeJwUJHicFCR4nBQkeJwUJHicFCR4nBQkeJwUIHiUNGFRRCh9y2wpNp/8ZgdP/G4DR/xlT
        ov8RHF3SBQsrPgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATJ29PFjmB6R5zvv4hidb/GHfI/ws0iv8UKG/oGDd92xc2
        fdoXNn3aFzZ92hc2fdoXNn3aFzZ92hc2fdoXNn3aFzZ92hc2fdoXNn3aFzZ92hg3ftoTKnPmDkWY/hx+
        zf8hidX/HGKx/hQocPIHDzBbAAEDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWLnQHFChudRY6g/Ajgsz/JpDZ/xt1
        w/8RPpH/HHbE/x6D0P8egtD/HoLQ/x6C0P8egtD/HoLQ/x6C0P8egtD/HoLQ/x6C0P8egtD/HoPR/xt1
        w/8SSZj/HnzJ/yaQ2f8gdcH/FCx28gsVPoIEChkFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGTN2FhUr
        cJ0YS5f8J4zU/yiS2f8aYKz/HEqR/yJgoP4iYaD5I2Ok+CNjpPkiYqL5ImKi+SJiovkiYqL5ImKi+SJi
        ovkiYqL3ImGh/RtQlv8dcLr/KZLZ/yaK0v8VOYn5DxxRpAgRJiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABo2dxoVL3fNG1Sf/iiDxf8mfcD/G0qQ/xswdPwRI0mbFClTVRw6dUgdPX1IHT19SB09
        fUgdPX1IHT19SB09e0YcO3mIGjx8+Rxanv8ogsX/KIHE/xdHl/4SJGDKCREmMgABAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJER4BBQgOCQUI
        DgsGCA4LBgkOCwYJDgsGCQ4LBgkOCwQGCQsXLmc+Eylx4B1Kjv4oZp7/JGCb/x9Agf8bL2TTCxYoSwQJ
        DREECQoLBAkKCwQJCgsECAoLBAgKCxs4aSYeQn7WH1CM/yZjnf8nZZ7/G0aL/hMpauYHECBLBQsSCwUL
        EgsECxILBAsSCwQLEgsECxILBAoSCwQKEgsBAwQIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWNnlODCxyiwsqb5ALKW6QCyltkAwobJAMJmuQDCVqkAskaJAMJGiTECht1Q8icv4aPn7/G0B//xg8
        f/8YKW/6ECBexgsZWZYLF1qQDBhakAwYWpANGVqQDRlbkBQmacAZN3n8Gz19/x4+fP8cOXr/EyZw/hMk
        X9cRHlqUEh9dkBIfXJATIFyQEyBckBQhXZAVIl2QFSJdkBYjYJENGz1hAAAAEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAdRIuyMHbB+xtyw/wXbcD8Fmy//BVpvfwUZ7v8E2W6/BFiuPwQX7b7Dlyz/A1X
        sf4LVq//ClOu/wlRrf8HTKn/BUmo/QNHpvwCQ6T8A0Gi/ARAn/wGP538CD+Z/Ao+lv4MPZT/DjyR/xA7
        jv8SOYv/FDiI/hY5hfwYOIP7GjeB/Bw2fvwfNnv8IDV4/CI0dvwlM3P8JzJw/CYtbfwSIVO2AAEAIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjTZC1R5bV/ymR2f8ji9b/IorV/yCI1f8ehtT/HITT/xqC
        0/8YgNL/Fn3S/xR70f8ReND/D3bP/wxzzv8KcM3/B23N/wRrzP8BZ8r/AGTJ/wFixv8CX8H/BF28/wZb
        uP8JWLT/C1av/w1Uq/8QUab/Ek+h/xRNnf8XS5j/GUmT/xtHj/8eRIr/IEKG/yI/gf8lPXz/Jzx5/ycx
        cP8TIlO4AQIAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjTpG2TpvZ/z6d4P84lt//N5Tf/zaT
        3v80kd3/M4/d/zGO3P8wi9v/Lona/yyH2f8phNj/J4LX/yWA1v8jfdb/IHrU/x540/8cddL/G3HR/xlv
        0P8Zbcz/GmvI/xtpxP8eZ8D/IGW8/yJjuP8kYbP/Jl+w/yherP8rW6j/LVqk/y9Yn/8xVpv/M1SX/zVT
        lP84UI//PFGK/zQ/fP8TIlO5AQIAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbRoyuI1yt+iZp
        pf4ngI//J36N/yZ9jP8leov/I3iK/yJ1iP8ic4b/InCF/yJug/8ia4H/Imh//yJlff8iYnv/Il95/yFc
        d/8iWXT/IVVy/yFScP8hT23/Ik1r/yRNav8mTGn/KExo/ypMZ/8sS2b/Lktl/zBKZP8xSmP/M0lh/zVK
        Yf83SWD/OUle/ztIXv82S2H/Mj53/i43e/kTJVSwAQIAGQAAAAAAAAAAAAAAAAAAAABnV1cBPDIyExwX
        FyEXL08pCRJlhAAcO/AIcwL/CHIA/wVwAP8DbQD/AWwA/wBqAP8AZwD/AGYA/wBkAP8CYgD/BGAA/wZf
        AP8HXQD/CVsA/wtaAP8NWAD/DlYA/xBUAP8SUwD/FFEA/xVPAP8XTQD/GEsA/xpKAP8cSAD/HUYA/x9F
        AP8hQgD/IkEA/yQ/AP8mPQD/JzsA/yo4AP8XQA7/AA9E5gQNN38RJT8hAAAAAAAAAAAAAAAAAAAAAAAA
        AABnV1cicWJimWVYWL0uJiZiAABCaAEfQOkNdwL/DXYA/wpzAP8HcQD/BW8A/wNtAP8BawD/AGkA/wJn
        AP8DZQD/BWMA/wdhAP8IYAD/Cl4A/wxcAP8NWwD/DlkA/xBXAP8SVQD/E1QA/xVSAP8XUAD/GE4A/xpM
        AP8cSwD/HUkA/x9HAP8hRQD/IkQA/yRCAP8lQAD/Jz4A/yo7AP8YQxD/AA9C2wAAI0wAAAABAAAAAAAA
        AAAAAAAAAAAAAGNTUwR3Z2ejtKOj+sSysv+QgYDoPjRG0QocM/UMcQL/D3gA/w12AP8KcwD/B3EA/wVv
        AP8DbQD/AWsA/wBpAP8CZwD/A2UA/wVjAP8HYQD/CGAA/wpeAP8MXAD/DVsA/w5ZAP8QVwD/ElUA/xNU
        AP8VUgD/F1AA/xhOAP8aTAD/HEsA/x1JAP8fRwD/IUUA/yJEAP8kQgD/JUAA/yk9AP8XRBH/AA5C2QAA
        IE4AAAABAAAAAAAAAAAAAAAAAAAAAGJSUlihkZH42svL/9fIyP/Xx8f/vKus/3txcP8tWiL/EGcF/w1z
        AP8MdgD/CnQA/whyAP8FbwD/A20A/wFrAP8AaQD/AmcA/wNlAP8FYwD/B2EA/whgAP8KXgD/DFwA/w1b
        AP8OWQD/EFcA/xJVAP8TVAD/FVIA/xdQAP8YTgD/GkwA/xtLAP8dSQD/H0cA/yBGAP8iRAD/JEIA/yY/
        AP8WRhL/AAxB1wAAHkkAAAABAAAAAAAAAAAAAAAAAAAAAGNTU5e3p6f87ubm//Dq6v/g1NT/287O/9TF
        xf+jmJT/VmpI/x5eE/8KbQD/C3UA/wp0AP8HcQD/BW8A/wNtAP8BawD/AGkA/wJnAP8DZQD/BWMA/wdh
        AP8IYAD/Cl4A/wxcAP8NWwD/DlkA/xBXAP8SVQD/E1QA/xVSAP8XUAD/GE4A/xpMAP8cSwD/HUkA/x9H
        AP8hRQD/IkQA/yVBAP8WRhX/AAtA0wAAHEYAAAABAAAAAAAAAAAAAAAAAAAAAGVVVTmFdXXAwbW1+vDr
        6/749vb/6+Tk/+HV1f/f09T/zb/A/5WOhf86YC7/DWIF/wpxAP8KdAD/B3EA/wVvAP8DbQD/AWsA/wBp
        AP8CZwD/A2UA/wVjAP8HYQD/CGAA/wpeAP8MXAD/DVsA/w5ZAP8QVwD/ElUA/xNUAP8VUgD/F1AA/xhO
        AP8aTAD/HEsA/x1JAP8fRwD/IUUA/yNDAP8WRxf/AAo90QAAGEIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AABhUVENbV1ddJyNjdHZ0dH9+Pb2//j19f/q4+P/597e/+je3//Jurv/eoBr/y1hJf8LZwP/CXEA/why
        AP8GbwD/A20A/wFrAP8AaQD/AmcA/wNlAP8FYwD/B2EA/whgAP8KXgD/DFwA/w1bAP8OWQD/EFcA/xJV
        AP8TVAD/FVIA/xdQAP8YTgD/GkwA/xtLAP8dSQD/H0cA/yFFAP8WRxn/AAk7zgAAFD8AAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAallZBWpZWTeThISnxLm48O/q6v/7+vr/8+/v/+zm5v/s5eX/4NXX/7Gp
        pP9VcUj/FmEO/whrAP8IcQD/BW8A/wNtAP8BawD/AGkA/wJnAP8DZQD/BWMA/wdhAP8IYAD/Cl4A/wxc
        AP8NWwD/DlkA/xBXAP8SVQD/E1QA/xVSAP8XUAD/GE4A/xpMAP8cSwD/HUkA/x9HAP8WSBv/AQg6ywAA
        EzwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2ZWUTbF5tbJGEjOjf19j/+/n5//v5
        +f/z7+//8Ovr//Hr6//a0dD/kZOC/yhfH/8IbQD/CHIA/wVvAP8DbQD/AWsA/wBpAP8CZwD/A2UA/wVj
        AP8HYQD/CGAA/wpeAP8MXAD/DVsA/w5ZAP8QVwD/ElUA/xNUAP8VUgD/F1AA/xhOAP8aTAD/HEsA/x5J
        AP8WSB7/AQY5yQAAEjkAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCMgsR
        QdRdek//trSn/+zm6P/+/f3/+vj4//f09P/59fX/8urs/5uXi/8SWwz/CHEA/whyAP8FbwD/A20A/wFr
        AP8AaQD/AmcA/wNlAP8FYwD/B2EA/whgAP8KXgD/DFwA/w1bAP8OWQD/D1YA/w5TAP8RUgD/Ek8A/xVP
        AP8YTgD/GkwA/xxLAP8YSh//AQU3xQAAEDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABCMAILPtMhehH/QYUn/4ibdf/e1db/+/n6//39/f/8+vr//fv7/+je3/9ab0v/CWMC/wlz
        AP8HcQD/BW8A/wNtAP8BawD/AGkA/wJnAP8DZQD/BWMA/wdhAP8IYAD/Cl4A/wxcAP8LWgD/G2IT/1KF
        TP9zmmr/U4FK/yFaEf8WTwD/GE4A/xpNAP8YSiH/AAM1wwAADjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAA+LQQKPtEiehL/H4kA/ySFCv9cjUX/uris//Ls7//8+/v//fz8//38
        /P/EvLj/M18n/wlrAP8KdAD/B3EA/wVvAP8DbAD/AGoA/wBoAP8CZwD/A2UA/wVjAP8HYQD/CGAA/wle
        AP8bZhf/o8Cf/+Lr4f/V4tT/3ufc/7TIrv8dWAz/Fk8A/xlQAP8aSiP/AAIywAAADDAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6KAQIO84lexX/IYoA/yCHAP8ahQD/L4QV/3SU
        Xf+jq5H/uLqp/8vJv//W0c3/jYp7/x1eE/8MdQD/CnMA/xB2C/8ifCH/K4Aq/y6ALv8QbhD/AWYA/wNl
        AP8FYwD/B2EA/wNbAP9qnWT/1OLS/0eBQ/8PWQX/P3k2/3efcP8bWAn/FFEA/xhTAP8aSSX/AAAuvQAA
        Ci0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3JQMFOM0oehf/I4wA/yGJ
        AP8ghwD/HIYA/xuCA/8mgQ7/MoIb/zd/Jf9Phzn/VIE//ydwFv8NdgD/CHIA/0uYRf+82Lr/w9zC/8Xd
        xf+RvpH/H3cf/wFmAP8DZQD/BWMA/wFbAP+SuY//oMCc/xJfDv8MWgD/C1YA/wxUAP8SVAD/E1MA/xZV
        AP8cSSb/AAArugAABioAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzIQID
        Nsoqehn/JY4A/yOLAP8hiQD/HYYA/zGRGv+kzpv/rdOl/5XGjf93tGv/EXsB/xN7Af8ReQD/CHMA/2Wo
        YP/G3sT/PpA6/zSJM/+sz6v/iLmI/wtsC/8CZwD/A2UA/wFdAP99rHn/s86x/xxoGv8LXAD/DVsA/w5Y
        AP8QVwD/ElUA/xVYAP8dSSj+AAAotwAABScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAwHgEAMsgteRz/J48A/yWMAP8jigD/H4cA/5zKj/+ey5T/RJo1/8vjxf9kqlf/EXwA/xV9
        AP8TewD/CnYA/2mqYv+pzqf/BXAA/wNuAP84jTX/vtm9/yd7Jv8AaAD/AmcA/wFkAP85gzf/2uja/16W
        Wv8HXAL/FGIP/yJpH/8PWQH/EFcA/xRbAP8eSSn9AAAkswAABSUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAArGQEALsYveR7/KJEA/yaNAP8kjAD/JIsD/7fYq/9jq1L/GIMG/7TX
        q/9InDb/FH4A/xd/AP8VfQD/DHcA/2+uaP+t0ar/BnIA/wRvAP89kDn/vdm8/yZ8Jv8BagD/AGkA/wJn
        AP8PaQ7/k7yS/83fy/92pXT/mLuW/6fEov8PXAf/DlkA/xNdAP8hSir9AAAhrgAABCIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoFgAAK8MxeCH+KpMA/yiPAP8mjQD/IYoA/47D
        fv+nz5z/Ko0S/7zbsv9Pnzv/FYAA/xmBAP8XfwD/DnkA/3CvaP/d7Nz/Y6de/zGJLv+rz6j/lcKT/w9z
        Df8DbQD/AWsA/wBpAP8BZgD/HnQd/425jP/T49L/sc2v/1eRUv8LXAL/DVoA/xNgAf8hSCv8AAAeqwAA
        BCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEgAAJsAzdiL+LJUA/ymQ
        AP8ojwD/JIwA/yyQDf+r053/vNux/8riwv9Mnzb/GIIA/xuDAP8ZgQD/EHsA/3Oyav/b69j/wdy8/9Pm
        0P+mzaL/JIIg/wZwAP8FbwD/A20A/wFrAP8AaQD/AWYA/wBhAP8GZAL/A14A/wRdAP8KXgD/C1wA/xNj
        A/8kSSv7AAAZpgAAAh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEAAA
        Irs2diT+LpYA/yqRAP8pkAD/KI8A/ySMAP8vkRD/VKQ//0edMf8hiAT/HoYA/xyEAP8aggD/En0A/3i1
        bf+u0qn/IoQX/zKMK/8XfA3/CnQA/wpzAP8HcQD/BW8A/wNtAP8BawD/AGkA/wFnAP8CZAD/BGMA/wdh
        AP8IYAD/CV0A/xNmBP8lRyv7AAAWowAAAhsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAcDgAAHLc4cyb+L5cB/yuSAP8qkQD/KZAA/yiPAP8ljQD/IosA/yGJAP8hiQD/IIcA/x6G
        AP8chAD/FH8A/3m2bv+z1az/EnsA/xB6AP8PeQD/DncA/wx1AP8KcwD/B3EA/wVvAP8DbQD/AWsA/wBp
        AP8CZwD/A2UA/wVjAP8HYQD/B18A/xNpBv8mRyv6AAARngAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAYCgAAF687dCj+MZkC/y2TAP8skgD/KpEA/ymQAP8ojwD/Jo0A/yWM
        AP8jiwD/IYkA/yCHAP8ehgD/GIIA/1CgPv+UxIj/GH8B/xV9AP8TewD/EHkA/w94AP8MdQD/CnMA/why
        AP8FbwD/A20A/wFrAP8AaQD/AmcA/wNlAP8FYwD/BWAA/xRsCf8nRCr6AAANmwAAABcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUCQAAEqw8cSn9M5sD/y6UAP8tkwD/LJIA/yqR
        AP8pkAD/KI8A/yaNAP8ljAD/I4sA/yGJAP8ghwD/HoYA/x6FAv8kiA7/GIAA/xd/AP8VfQD/E3sA/xB5
        AP8OdwD/DHUA/wpzAP8HcQD/BW8A/wNtAP8BawD/AGkA/wJnAP8DZQD/A2IA/xRvCv8pRCn4AAAKlgAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBQAADaY/cSr9NJwE/y6V
        AP8ulAD/LZMA/yuSAP8qkQD/KZAA/yeOAP8mjQD/JYwA/yOKAP8hiQD/IIcA/x6FAP8bgwD/GoIA/xiA
        AP8XfwD/FH0A/xJ7AP8QeQD/DncA/wx1AP8KcwD/B3EA/wVvAP8DbQD/AWsA/wBpAP8CZwD/AWMA/xVz
        Df8qQij4AAAGkgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBAAA
        B6JDcC39QKMS/zmcDv85nA7/N5sO/zaaDv82mA7/NZcO/zSWDv8ylQ7/MJQO/y+TDv8ukQ7/LJAO/yuP
        Dv8pjQ7/J4wO/yaKDv8kiA7/I4cO/yGGDv8egw7/HIIO/xuADv8Zfg7/F3wO/xV6Dv8UeA7/FHYO/xN1
        Dv8Tcg7/E3AO/ySAGv8sQif2AAACjQAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAHAAAAApo7VC39U4U4/0+ANf9PgDX/T4A1/09/Nf9PfzX/Tn81/05+Nf9OfjX/TX41/01+
        Nf9MfjX/TH01/0x9Nf9MfDX/S3w1/0p7Nf9KezX/SXo1/0l6Nf9IeTX/SHk1/0h5Nf9HeDX/R3g1/0Z3
        Nf9FdjX/RXY1/0R2Nf9DdTX/Q3Q0/0x9O/8hLh32AAAAhwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAlUICwfcDhIM5w4SDOYOEgzmDhIM5g4SDOYOEgzmDhIM5g4S
        DOYOEgzmDhIM5g4SDOYOEgzmDhIM5g4SDOYOEgzmDhIM5g4SDOYOEgzmDhIM5g4SDOYOEgzmDhIM5g8S
        DOYPEgzmDxIM5g8SDOYPEgzmDxIM5g8SDOYPEwzmDxMM5g8TDOcFBgTKAAAARQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA/+P///4/
        AAD/gf//+B8AAP/A///wPwAA/8B//+A/AAD/4D//4H8AAP/wP//A/wAA//gAAAH/AAD//AAAAf8AAP/8
        AAAD/wAA//4D/Af/AAD//wP8D/8AAP4AAAAABwAA/AAAAAADAAD8AAAAAAMAAPwAAAAAAwAA/AAAAAAD
        AAD+AAAAAA8AAPMAAAAADwAA4AAAAAAPAADgAAAAAA8AAMAAAAAADwAA4AAAAAAPAAD4AAAAAA8AAPwA
        AAAADwAA/wAAAAAPAAD/AAAAAA8AAP8AAAAADwAA/wAAAAAPAAD/AAAAAA8AAP8AAAAADwAA/wAAAAAP
        AAD/AAAAAA8AAP8AAAAADwAA/wAAAAAPAAD/AAAAAA8AAP8AAAAADwAA/wAAAAAPAAD/AAAAAA8AAP8A
        AAAADwAA/wAAAAAPAAD/AAAAAA8AAP8AAAAADwAA/4AAAAAfAAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>